name: Release & Publish

on:
  workflow_dispatch:
    inputs:
      version_override:
        description: 'Version override (should be set if no tag is set)'
        default: ''
      is_draft:
        description: 'Is this release draft?'
        default: 'false'
      is_prerelease:
        description: 'Is this prerelease?'
        default: 'false'
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    needs: publish
    permissions: write-all
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Extract version from package.json
        uses: amochkin/gha-json-value@v1-rc6
        id: extract-version
        with:
          property: version
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version_override != '' && github.event.inputs.version_override || github.steps.extract-version.outputs.value || github.ref }}
          release_name: v${{ github.event.inputs.version_override != '' && github.event.inputs.version_override || github.steps.extract-version.outputs.value || github.ref }}
          draft: ${{ github.event.inputs.is_draft }}
          prerelease: ${{ github.event.inputs.is_prerelease }}

  publish:
    runs-on: ubuntu-latest
    permissions: write-all
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Setup .npmrc file to publish to npm
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install modules
        run: npm install
      - name: Build
        run: npm run build
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}